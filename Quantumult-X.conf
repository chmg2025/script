#==============UserScript==============#
# 本配置没有分流 纯手动选择节点
# 日期: 2025-06-16
# 本配置地址：https://raw.githubusercontent.com/chmg2025/script/refs/heads/main/Quantumult-X.conf

# 建议在「其他设置」里「GeoLite2」的「来源」填写使用下面链接，并开启「自动更新」
; https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
; https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/Country.mmdb

# "reject" 策略会返回 HTTP 状态码 404,不附带任何额外内容
# "reject-200" 策略会返回 HTTP 状态码 200,不附带任何额外内容
# "reject-img" 策略返回 HTTP 状态码 200,同时附带 1px gif
# "reject-dict" 策略返回 HTTP 状态码 200,同时附带一个空的 JSON 对象
# "reject-array" 策略返回 HTTP 状态码 200,同时附带一个空的 JSON 数组

#**************************************#
[general]
# 节点延迟测试，server_check_url指定的网址进行相应测试，以确认节点的可用性
server_check_url= http://www.gstatic.com/generate_204
;server_check_url=http://cp.cloudflare.com/generate_204
;server_check_url= http://www.qualcomm.cn/generate_204
;server_check_url=http://captive.apple.com/generate_204
;server_check_url =http://www.google.com/generate_204

# 服务器测试超时时间 (毫秒)
server_check_timeout=2000

# 用于Check节点IP地址(以下geo_location_checker任选一个即可)
;geo_location_checker = http://ip-api.com/json/?lang=zh-CN, https://gitlab.com/lodepuly/vpn_tool/raw/main/Resource/Script/GeoIP/Geo_Location_Checker_for_QX.js
# 显示名称-详细地址-国旗
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/GeoLocationChecker/QuantumultX/IP-API.js
# 中文显示地区
;geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
# 显示名称及无国旗
;geo_location_checker=http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-location-with-script.js
# 显示英文名称及国旗
;geo_location_checker=http://ifconfig.co/json, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IPConfig.js

# 资源解析器，自定义各类远程资源的转换、如节点、规则-filter、重写-rewrite等
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

# 下列表中内容将不经过QuantumultX的处理
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
udp_whitelist=1-442, 444-65535

# 第一个filter为4g模式开启规则分流，第二个filter为其他wifi下开启规则分流，第三个wifi1修改成你路由器翻墙的wifi名开启直连模式，第四个wifi2为你公司或者其他有路由器翻墙的WiFi名走直连）
# 默认关闭根据wifi切换模式，如需开启，删除下方的";"即可
;running_mode_trigger=filter, filter, wifi1:all_direct, wifi2: all_direct

# dns_exclusion_list中的域名将不使用fake-ip方式, 多个域名用“, ”连接。其它域名则全部采用 fake-ip及远程解析的模式
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com


#**************************************#
[dns]
; 禁用系统 DNS（no-system） 以及 ipv6
no-system
no-ipv6
;支持参数 excluded_ssids , included_ssids(1.0.29+) 指定在特定 Wi-Fi下失效/生效

// circumvent-ipv4-answer, circumvent-ipv6-answer 参数
//1、当并发向多个上游 DNS 进行查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果（如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录）
//2、如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败
//3、如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数
;circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
;circumvent-ipv6-answer = ::

//如需使用 DoH3，DNS over HTTP/3，请开启下面👇参数
;prefer-doh3

;指定 dns 服务器，并发响应选取最优结果
server=114.114.114.114
server=202.141.176.93
server=202.141.178.13
server=117.50.10.10
server=223.5.5.5
server=119.29.29.29:53
server=119.28.28.28
# 指定域名解析DNS
server=/*icloud.com/119.29.29.29
server=/*icloud.com.cn/119.29.29.29
server=/*tencent.com/119.29.29.29
server=/*weixin.com/119.29.29.29
;如指定 doh 服务，则👆️上面的一般 dns 解析均失效 额外参数，在特定网络下禁用该 doh
;doh-server=xxx.com, excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持多个 doh 并发，👇
;doh-server = https://dns.alidns.com/dns-query,https://doh.pub/dns-query,https://dns.google/dns-query,https://223.5.5.5/dns-query, https://223.6.6.6/dns-query
; 1.0.29以前版本使用
doh-server = https://doh.pub/dns-query, https://dns.alidns.com/dns-query

; 1.0.29 版本后支持 alias 映射类型
;alias=/example.com/another-example.com

;如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效
;doq-server = quic://dns.adguard.com
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
;doq-server = quic://dns.adguard.com, included_ssids=SSID2

;指定域名解析dns, 下面为示范，按需启用, 同样支持 excluded_ssids/included_ssids 参数
;server=/*.taobao.com/223.5.5.5, excluded_ssids=My-Wifi, Your-Wifi
;server=/*.tmall.com/223.5.5.5, included_ssids=His-Wifi
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
//映射域名到其它域名的类型
;alias = /example7.com/another-example.com



#**************************************#

[policy]
static=代理加速, proxy, 自动, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Vimeo.png
url-latency-benchmark=自动, server-tag-regex=.*, check-interval=600, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Vimeo.png


#**************************************#
# 本地节点↓↓↓↓↓↓↓↓↓
[server_local]



#**************************************#
# 添加远程节点↓↓↓↓↓↓↓↓↓
[server_remote]






#**************************************#
# 本地分流规则(相同规则下，本地规则将覆盖远程规则，优先生效)↓↓↓↓↓↓↓↓↓
[filter_local]
# 大陆流量
geoip, cn, direct

# 其他流量
final, 代理加速

# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

# 不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 全球加速


#**************************************#
# 远程分流规则订阅，部分规则有先后顺序要求，调整顺序可能失效，将网络请求进行分流，网络请求的走向由匹配到的策略组决定↓↓↓↓↓↓↓↓↓
[filter_remote]


#**************************************#
# 本地重写规则↓↓↓↓↓↓↓↓↓
[rewrite_local]


#**************************************#
# 远程重写↓↓↓↓↓↓↓↓↓
[rewrite_remote]


#**************************************#
# 脚本配置↓↓↓↓↓↓↓↓↓
[task_local]


#**************************************#
[mitm]
# 跳过证书验证
skip_validating_cert = true
force_sni_domain_name = false

########################################
# passphrase和p12代为证书&主机名部分，可去UI界面自行生成并安装证书，会在此生成对应信息，也可在更新配置前可把旧的配置中passphrase和p12代码拷贝下来, 导入新的配置文件把内容粘贴在对应位置就不用重装证书。

passphrase =
p12 =

# 主机名
hostname =
